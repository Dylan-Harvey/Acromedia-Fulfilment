<?php
/**
 * Tests the functionality of the Commerce_fulfillment Pages
 */
//@TODO change naming to be for commerce fulfillment
class SimpletestExampleTestCase extends DrupalWebTestCase {
  protected $admin_user;

  //@TODO - fulfillment, one "l" or two.......
  //Tells the SimpleTest interface about our test in order to be able to run it
  public static function getInfo() {
    return array(
      'name' => 'commerce_fulfillment_test1',
      'description' => 'Ensure that the commerce_fulfillment modules pages function properly.',
      'group' => 'commerce_fufillment_tests',
    );
  }

  //Set up any requirements needed to run test, we will need a user with admin permissions
  public function setUp() {

    parent::setUp('commerce_fulfillment');
    //Create an admin permission
    $permissions = array(
      'access administration pages',
      'access content',
      'administer site configuration',
    );
    //Create user with admin permission to test pages
    $this->admin_user = $this->drupalCreateUser($permissions);
  }

  public function testcommerce_fulfillment_menu(){
    //Log user in
    $this->drupalLogin($this->admin_user);

    //Test base page(Packages page)
    $this->drupalGet('admin/commerce/manage-orders/commerce_fulfillment');
    $this->assertResponse('200');

    //Test admin page
    $this->drupalGet('admin/content/custom-site-settings/general');
    $this->assertResponse('200');

    //@TODO - this test won't work if there isn't already an order #3, for a proper test you'd want to create an orders for the test.
    //Test landing page for orders
    $this->drupalGet('admin/commerce/manage-orders/3/orders');
    $this->assertResponse('200');
  }

  public function testcommerce_fulfillment_packagesentity() {
    // Create 10 entities.
    for ($i = 1; $i <= 10; $i++) {
      $edit[$i]['package_id'] = $this->$i;
      $edit[$i]['commerce_fulfillment_text[und][0][value]'] = $this->$i;

      //@TODO - again I think this depends on an order being present that may not exist?
      //Check that each entity has been created
      $this->drupalGet('orders/actions/manage-orders/commerce_fulfillment/2/orders' . $i);
    }
  }
}
?>
