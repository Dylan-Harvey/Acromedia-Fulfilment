<?php
/***********************************************************************************
 * This file is part of Comerce Fulfilment. A drupal module used to fulfil         *
 * orders placed in the Drupal Commerce module.                                    *
 *                                                                                 *
 * Authors: Dylan Harvey, Evan Schisler, Levi Weir, Parker Groenewoud              *
 *                                                                                 *
 * Project for COSC224 - Projects in Computer Science at Okanagan College.         *
 * Sponsored by AcroMedia                                                          *
 *                                                                                 *
 *                                                                                 *
 * Version: 1.0 - 12/03/15 - (Code before header)                                  *                                               *
 *          1.1 - 26/03/15 - (Code after header)                                   *
 *                                                                                 *
 * Originially from: http://choosealicense.com/licenses/mit/                       *
 * The MIT License (MIT)                                                           *
 *                                                                                 *
 *                                                                                 *
 *                                                                                 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy    *
 * of this software and associated documentation files (the "Software"), to deal   *
 * in the Software without restriction, including without limitation the rights    *
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell       *
 * copies of the Software, and to permit persons to whom the Software is           *
 * furnished to do so, subject to the following conditions:                        *
 *                                                                                 *
 * The above copyright notice and this permission notice shall be included in all  *
 * copies or substantial portions of the Software.                                 *
 *                                                                                 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR      *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,        *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE     *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER          *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,   *
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE   *
 * SOFTWARE.                                                                       *
 **********************************************************************************/
/**
 * @return array
 *
 * implements hook hook_menu()
 * builds the menu tabs for the site, both in the admin bar and in the page overlay.
 *
 */
function commerce_fulfilment_menu() {
    $items = array();

    /**
     * Creates the commerce fulfilment link
     */
    $items['admin/commerce/manage-orders/commerce_fulfilment'] = array(
        'title' => 'Commerce Fulfilment',
        'access arguments'=>array('access content'),
        'page callback' => 'drupal_get_form',
        'page arguments'=>array('commerce_fulfilment_landing_form'),
        'type' => MENU_NORMAL_ITEM,
        'weight' => 50
    );
    $items['admin/commerce/manage-orders/commerce_fulfilment/admin'] = array(
        'title'=> 'Admin Options',
        'access arguments'=>array('access content'),
        'page callback' => 'drupal_get_form',
        'page arguments'=>array('commerce_fulfilment_admin_form'),
        'type' => MENU_NORMAL_ITEM,
        'weight' => 50
    );
    /**
     * creates link to the package page
     */
    $items['admin/commerce/manage-orders/commerce_fulfilment/%commerce_order/orders'] = array(
        'title' => 'Edit',
        'page callback' => 'orders_content',
        'page arguments' => array(4),
        'access callback' => 'commerce_order_access',
        'access arguments' => array('update', 4),
        'type' => MENU_DEFAULT_LOCAL_TASK,
        'weight' => -7,
        'context' => MENU_CONTEXT_PAGE | MENU_CONTEXT_INLINE,
    );

    /**
     * Creates link to the shipment page.
     */
    $items['admin/commerce/manage-orders/commerce_fulfilment/shipments'] = array(
        'title' => t('Shipments'),
        'description' => t('Shipments tab'),
        'page callback' => 'shipments_content',
        'type' => MENU_LOCAL_TASK,
        'access callback' => true,
        'weight' => 1
    );
    $items['admin/commerce/manage-orders/commerce_fulfilment/commerce_fulfilment_create_package_form'] = array(
        'page callback' => 'drupal_get_form',
        'page arguments' => array('commerce_fulfilment_create_package_form')
    );


    return $items;
}
function commerce_fulfilment_menus_menu_link_alter(&$items) {
    if (isset($items['admin/commerce/manage-orders/commerce_fulfilment'])) {
        $items['admin/commerce/manage-orders/commerce_fulfilment']['parent'] = 'admin/commerce/manage-orders/commerce_fulfilment/admin';
        $items['admin/commerce/manage-orders/commerce_fulfilment']['title'] = 'Admin Page';
        $items['admin/commerce/manage-orders/commerce_fulfilment']['type'] = MENU_NORMAL_ITEM;
    }
}
/**
 * @param $order
 * @return string
 *
 * Builds the package page.
 * Pulls in Order info and displays the name of the products in Order 4.
 *
 */
function orders_content($order) {
        $form_name = 'commerce_fulfilment_create_package_form';
        $order_num = $order->order_number;
        dpm($order);
        $line_id = $order->commerce_line_items['und'];
        dpm($line_id);
        $products = commerce_product_load_multiple($line_id);
        dpm($products);
        $output = '<h2>' . t('Products in order:') . '</h2>';
        foreach($products as $product){
            $output .= '<p>'.$product->sku.'</p>';
        }
        $query = new EntityFieldQuery();
        $query->fieldCondition('body', 'value', $order_num);
        $result=$query->execute();
        if(isset($result['node'])) {
            $packages_nid = array_keys($result['node']);
            $packages = entity_load('node', $packages_nid);
            foreach ($packages as $package) {
                $output .= '<p>' . $package->package_id . '</p>';
            }
        }
        $output .= drupal_render(drupal_get_form($form_name,$order_num));
        return $output;
}

/**
 * implements hook_form
 */
function commerce_fulfilment_create_package_form($order_id){
    $form = array();
    $form['order_id'] = array(
      '#type' => 'hidden',
        '#value' => $order_id,
    );
    $form['box_type'] = array(
        '#type' => 'select',
        '#title' => 'Select box type: ',
        '#options' => array('large', 'medium', 'small', 'tiny')
    );
    $form['create'] = array(
        '#type' => 'submit',
        '#value' => t('Create a Package')
    );
    return $form;
}
/**
 * implements hook_form_submit()
 */
function commerce_fulfilment_create_package_form_submit($form, $form_state){
    $entity_type = 'package';
    $entity = entity_create($entity_type, array());
    $entity->order_id=$form_state['values']['order_id'];
    $entity->box_type = $form_state['values']['box_type'];
    $entity->save();

}
/**
 * @return string
 *
 * Builds the shipments page
 *
 */
function shipments_content() {
    return '<h2>'.t('Shipments info').'</h2>';
}
/**
 * loads an array of order objects.
 * If there is no index chosen, Returns the array.
 * If there is an index chosen. Returns the data in the array at that index.
 */
function commerce_fulfilment_get_array($index = FALSE)
{
    $orders = commerce_order_load_multiple(array(), array('status' => 'pending'));
    dpm($orders);
    $order_id = array();
    $count = 0;
    /**
     * Creates an array of order id's for the select box.
     */
    foreach ($orders as $order) {
        $order_id[$count] = $order->order_number;
        $count++;
    }

 if($index !== FALSE && is_int($index) && $index <= count($order_id))
    {
        return $order_id[$index];
    }
    return $order_id;
}
/**
 * @return array
 * Implements hook hook_menu
 * A form for the user to select which order they would like to see.
 */
function commerce_fulfilment_landing_form($form, &$form_state){

    $form = array();
    $form['title'] = array(
        '#markup' => '<h2>Commerce Fulfilment:</h2>'
    );
    $form['select'] = array(
        '#type' => 'select',
        '#title' => t("Choose from list of pending orders:"),
        '#options' => commerce_fulfilment_get_array()
    );
    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => t('Submit')
    );
return $form;
}

/**
 * @param $form
 * @param $form_state
 * Implements hook_form_validate
 *
 *
 */
function commerce_fulfilment_landing_form_validate($form, &$form_state){
}

/*
 * @param $form
 * @param $form_state
 * Implements hook_form_submit().
 * Gets the value of the index selected by the select form, then redirects to the
 * admin/commerce/manage-orders/$arguments/orders page.
 */
function commerce_fulfilment_landing_form_submit($form,&$form_state){
    $argument = commerce_fulfilment_get_array((int)$form_state['values']['select']);
    $form_state['redirect'] = 'admin/commerce/manage-orders/commerce_fulfilment/' .$argument.'/orders';
}
/**
 *
 * @return array
 * Implements hook_form
 * Creates an admin page form
 * Will use this data to print packing slips and shipping labels
 */
function commerce_fulfilment_admin_form(){
    $form = array();
    $form['title'] = array(
        '#markup' => '<h2>Admin Page</h2>'
    );
    /**
     * Creates seperate information fields
     */
    $form['Company Information']=array(
        '#type'=>'fieldset',
        '#title'=>t("Enter your company's information below"),
        '#description'=>'Enter information to use on Packing Slips and Shipping Labels.'
    );
    /**
     * Textfields
     */
    $form['Company Information']['company'] = array(
        '#type'=>'textfield',
        '#title'=>t('Company name:'),
    );
    $form['Company Information']['address'] = array(
        '#type'=>'textfield',
        '#title'=>t('Address:')
    );
    $form['Company Information']['phone'] = array(
        '#type'=>'textfield',
        '#title'=>t('Company Phone Number:')
    );
    /**
     * Allows user to upload company logo
     */
    $form['#attributes']['enctype'] = 'multipart/form-data';

    $form['Company Information']['logo']=array(
        '#type'=>'file',
        '#title'=>t('Upload your company logo:'),
    );
    /**
     * Submit button
     */
    $form['submit']=array(
        '#type'=>'submit',
        '#value'=>t('Submit')
    );
    return $form;
}
/**
 * Implements hook hook_form_validate
 * Validates information entered into the form
 */
function commerce_fulfilment_admin_form_validate($form, &$form_state){
    if(empty($form_state['values']['company']))
        form_set_error('company','Company cannot be empty');
    if(empty($form_state['values']['address']))
        form_set_error('address','Address cannot be empty');
    if(empty($form_state['values']['phone']))
        form_set_error('phone','Phone cannot be empty');
}

/**
 * @param $form
 * @param $form_state
 *
 * Allows the form to submit its information and display a message.
 *
 */
function commerce_fulfilment_admin_form_submit($form, &$form_state){
    drupal_set_message('Form has been submitted');
}
/**
 * @return array
 * implements hook hook_admin_paths()
 * allows us to us the admin bar.
 */
function commerce_fulfilment_admin_paths() {
    $paths = array(
        'commerce/manage-orders/commerce_fulfilment/*/add' => TRUE,
        'commerce/manage-orders/commerce_fulfilment/*/edit' => TRUE,
    );
    $paths = array(
        'commerce/manage-orders/commerce_fulfilment/admin/*/add' => TRUE,
        'commerce/manage-orders/commerce_fulfilment/admin/*/edit' => TRUE,
    );
    return $paths;
}

/**
 * @return array
 * implement hook hook_overlay_paths()
 *
 */
function commerce_fulfilment_overlay_paths() {
    $paths = array(
        'commerce/manage-orders/commerce_fulfilment/*/add' => TRUE,
        'commerce/manage-orders/commerce_fulfilment/*/edit' => array(
            'width' => 500,
        ),
    );
    $paths = array(
        'commerce/manage-orders/commerce_fulfilment/admin/*/add' => TRUE,
        'commerce/manage-orders/commerce_fulfilment/admin/*/edit' => array(
            'width' => 500,
        ),
    );
    return $paths;
}
/**
 * Implements hook_entity_info()
 */
/////////////////Package Entity////////////////
function commerce_fulfilment_entity_info(){
    $info = array();
    $info['package'] = array(
        'label' => t('package'),
        'base table' => 'commerce_fulfilment_packages',
        'entity keys' => array(
            'id' => 'id'
        ),
        'module'=>'commerce_fulfilment'
    );
    $info['shipment'] = array(
        'label' => t('shipment'),
        'base_table' => 'commerce_fulfilment_shipments',
        'entity keys' => array(
            'shipment_id' => 'shipment_id',
        ),
    );
    return $info;
}
